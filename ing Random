  cov(x::AbstractVector; corrected::Bool=true)

  Compute the variance of the vector x. If corrected is true (the default)
  then the sum is scaled with n-1, whereas the sum is scaled with n if
  corrected is false where n = length(x).

  cov(X::AbstractMatrix; dims::Int=1, corrected::Bool=true)

  Compute the covariance matrix of the matrix X along the dimension dims. If
  corrected is true (the default) then the sum is scaled with n-1, whereas the
  sum is scaled with n if corrected is false where n = size(X, dims).

  cov(x::AbstractVector, y::AbstractVector; corrected::Bool=true)

  Compute the covariance between the vectors x and y. If corrected is true
  (the default), computes \frac{1}{n-1}\sum_{i=1}^n (x_i-\bar x) (y_i-\bar
  y)^* where * denotes the complex conjugate and n = length(x) = length(y). If
  corrected is false, computes \frac{1}{n}\sum_{i=1}^n (x_i-\bar x) (y_i-\bar
  y)^*.

  cov(X::AbstractVecOrMat, Y::AbstractVecOrMat; dims::Int=1, corrected::Bool=true)

  Compute the covariance between the vectors or matrices X and Y along the
  dimension dims. If corrected is true (the default) then the sum is scaled
  with n-1, whereas the sum is scaled with n if corrected is false where n =
  size(X, dims) = size(Y, dims).

  cov(X, w::AbstractWeights, vardim=1; mean=nothing,  corrected=false)

  Compute the weighted covariance matrix. Similar to var and std the biased
  covariance matrix (corrected=false) is computed by multiplying scattermat(X,
  w) by \frac{1}{\sum{w}} to normalize. However, the unbiased covariance
  matrix (corrected=true) is dependent on the type of weights used:

    •    AnalyticWeights: \frac{1}{\sum w - \sum {w^2} / \sum w}

    •    FrequencyWeights: \frac{1}{\sum{w} - 1}

    •    ProbabilityWeights: \frac{n}{(n - 1) \sum w} where n equals
        count(!iszero, w)

    •    Weights: ArgumentError (bias correction not supported)

  cov(ce::CovarianceEstimator, x::AbstractVector; mean=nothing)

  Compute a variance estimate from the observation vector x using the
  estimator ce.

  cov(ce::CovarianceEstimator, x::AbstractVector, y::AbstractVector)

  Compute the covariance of the vectors x and y using estimator ce.

  cov(ce::CovarianceEstimator, X::AbstractMatrix, [w::AbstractWeights]; mean=nothing, dims::Int=1)

  Compute the covariance matrix of the matrix X along dimension dims using
  estimator ce. A weighting vector w can be specified. The keyword argument
  mean can be:

    •    nothing (default) in which case the mean is estimated and
        subtracted from the data X,

    •    a precalculated mean in which case it is subtracted from the data
        X. Assuming size(X) is (N,M), mean can either be:
      
          •    when dims=1, an AbstractMatrix of size (1,M),
      
          •    when dims=2, an AbstractVector of length N or an
              AbstractMatrix of size (N,1).

  cov(d::MultivariateDistribution)

  Compute the covariance matrix for distribution d. (cor is provided based on
  cov).

  cov(d::MatrixDistribution)

  Compute the covariance matrix for vec(X), where X is a random matrix with
  distribution d.

  cov(d::MatrixDistribution, flattened = Val(false))

  Compute the 4-dimensional array whose (i, j, k, l) element is cov(X[i,j],
  X[k, l]).
